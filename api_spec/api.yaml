// API spec for creating todo

info:
  title: Todo API
  version: 1.0.0
  description: API for managing Todo items
paths:
  /todos:
    post:
      summary: Create a new Todo item
      tags:
        - Todos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Posted successfully"
                  Data:
                    type: object
                    properties:
                      data:
                        type: object
                        example: { "InsertedID": "60c72b2f9b1d8c3f6d7a7b90" }
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

// API spec for reading todo

info:
  title: Todo API
  version: 1.0.0
  description: API for managing Todo items
paths:
  /todos/{id}:
    get:
      summary: Get a Todo item by ID
      tags:
        - Todos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the Todo item to retrieve
      responses:
        '200':
          description: A Todo item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid ID"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo not found"

// API spec for updating todo

info:
  title: Todo API
  version: 1.0.0
  description: API for managing Todo items
paths:
  /todos/{id}:
    put:
      summary: Update a Todo item by ID
      tags:
        - Todos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the Todo item to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: Todo item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

// API spec for deleting todos

info:
  title: Todo API
  version: 1.0.0
  description: API for managing Todo items
paths:
  /todos/{id}:
    delete:
      summary: Delete a Todo item by ID
      tags:
        - Todos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the Todo item to delete
      responses:
        '200':
          description: Todo item deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo deleted"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid ID"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"